public class Solution {
    public boolean exist(char[][] board, String word) {
        if(word == null || word.length() == 0)  return false;
        int m = board.length;
        int n = board[0].length;
        boolean[][] visited = new boolean[m][n];
        for(int i = 0; i < m; i ++) {
            for(int j = 0; j < n; j ++) {
                if(helper(board, word, visited, i, j, 0))   return true;
            }
        }
        return false;
    }
    private boolean helper(char[][] board, String word, boolean[][] visited, int x, int y, int index) {
        if(index == word.length())  return true;
        if(x < 0 || x >= board.length || y < 0 || y >= board[0].length || visited[x][y] || board[x][y] != word.charAt(index))    return false;
        visited[x][y] = true;
        boolean exist = helper(board, word, visited, x - 1, y, index + 1) || helper(board, word, visited, x + 1, y, index + 1) || helper(board, word, visited, x, y - 1, index + 1) || helper(board, word, visited, x, y + 1, index + 1);
        visited[x][y] = false;
        return exist;
    }
}

/*
这么简单的题目，用了那么复杂的方法，最后还写错了，真是醉。

注意可以在判断neighbors之前，对当前的点进行判断，不符合就return false；
然后因为此题只需要true和false的信息，不用什么路径，因此直接用四个 || 
来连接四个neighbors的判断就行了。
*/

public class Solution {
    public boolean exist(char[][] board, String word) {
        if(board == null || board.length == 0 || board[0].length == 0)  return false;
        for(int i = 0; i < board.length; i ++) {
            for(int j = 0; j < board[0].length; j ++) {
                if(helper(board, i, j, word, 0))  return true;
            }
        }
        return false;
    }
    private boolean helper(char[][] board, int x, int y, String word, int index) {
        if(index == word.length())  return true;
        if(x < 0 || y < 0 || x >= board.length || y >= board[0].length || board[x][y] != word.charAt(index))   return false;
        int[] dx = {-1, 1, 0, 0};
        int[] dy = {0, 0, -1, 1};
        char chr = board[x][y];
        board[x][y] = '#';
        for(int i = 0; i < 4; i ++) {
            int xx = x + dx[i];
            int yy = y  + dy[i];
            if(helper(board, xx, yy, word, index + 1))  return true;
        }
        board[x][y] = word.charAt(index);
        return false;
    }
}