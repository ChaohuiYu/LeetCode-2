public class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        reverse(nums, 0, nums.length - k - 1);
        reverse(nums, nums.length - k, nums.length - 1);
        reverse(nums, 0, nums.length - 1);
    }
    private void reverse(int[] nums, int start, int end) {
        while(start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end --;
        }
    }
}

/*
同样是使用了多次翻转的原理。
利用例子[1,2,3,4,5,6,7]来说明：
1. 翻转k之前的部分 [4,3,2,1,5,6,7]
2. 翻转k之后的部分 [4,3,2,1,7,6,5]
3. 翻转整个数组  [5,6,7,1,2,3,4]

注意k的变化，和在reverse的时候，start和end的值得确定，
带入进行测试
*/